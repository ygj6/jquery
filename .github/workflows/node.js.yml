name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NODE_VERSION: [10.x, 12.x, 14.x]
        NPM_SCRIPT: ["test:browserless"]
        include: 
          - NAME: "Browser tests: full build, Chrome & Firefox stable"
            NODE_VERSION: "12.x"
            NPM_SCRIPT: "test:browser"
            BROWSERS: "ChromeHeadless,FirefoxHeadless"
          - NAME: "Browser tests: slim build, Chrome stable"
            NODE_VERSION: "12.x"
            NPM_SCRIPT: "test:slim"
            BROWSERS: "ChromeHeadless"
          - NAME: "Browser tests: no-deprecated build, Chrome stable"
            NODE_VERSION: "12.x"
            NPM_SCRIPT: "test:no-deprecated"
            BROWSERS: "ChromeHeadless"
          - NAME: "Browser tests: ES modules build, Chrome stable"
            NODE_VERSION: "12.x"
            NPM_SCRIPT: "test:esmodules"
            BROWSERS: "ChromeHeadless"
          - NAME: "Browser tests: AMD build, Chrome stable"
            NODE_VERSION: "12.x"
            NPM_SCRIPT: "test:amd"
            BROWSERS: "ChromeHeadless"
          - NAME: "Browser tests: full build, Firefox ESR"
            NODE_VERSION: "12.x"
            NPM_SCRIPT: "test:browser"
            BROWSERS: "FirefoxHeadless"
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Use Node.js ${{ matrix.NODE_VERSION }}
      uses: actions/setup-node@v2.1.2
      with:
        node-version: ${{ matrix.NODE_VERSION }}

    - name: Install firefox esr
      run: |
        export FIREFOX_SOURCE_URL='https://download.mozilla.org/?product=firefox-esr-latest&lang=en-US&os=linux64'
        wget --no-verbose $FIREFOX_SOURCE_URL -O - | tar -jx -C ${HOME}
      if: "contains(matrix.NAME, 'Firefox ESR')"

    - name: Run test
      env:
        BROWSERS: ${{ matrix.BROWSERS }}
      run: |
        export PATH=${HOME}/firefox:$PATH
        npm install
        npm run ${{ matrix.NPM_SCRIPT }}
